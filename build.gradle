plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.1.0.RELEASE'
    id "org.dddjava.jig-gradle-plugin" version "2018.11.2" // Design Report Generator
}

group 'com.example'
version '1.0-SNAPSHOT'
description 'api sample GraphQL and REST using Spring boot'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Design Report Generator
jigReports.dependsOn(clean, compileJava, processResources)

sourceSets {
    main {
        // scan scan mybatis SQL map XML files
        resources.srcDirs = ["src/main/java", "src/main/resources"]
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.1.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.h2database:h2:1.4.196'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
    implementation 'org.mybatis:mybatis-typehandlers-jsr310:1.0.2'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:5.2'
    implementation 'com.graphql-java-kickstart:graphiql-spring-boot-starter:5.2'

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude(group: 'junit')
    }

    testImplementation("org.junit:junit-bom:5.3.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testRuntimeClasspath("org.junit.platform:junit-platform-launcher")
    testRuntimeClasspath("org.junit.jupiter:junit-jupiter-engine")
}

test {
    useJUnitPlatform()
}
